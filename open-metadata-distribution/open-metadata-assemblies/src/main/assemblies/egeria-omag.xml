<?xml version="1.0" encoding="UTF-8"?>

<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- Copyright Contributors to the ODPi Egeria project.  -->

<assembly xmlns="http://maven.apache.org/ASSEMBLY/2.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.1.0 http://maven.apache.org/xsd/assembly-2.1.0.xsd">
    <formats>
        <format>tar.gz</format>
        <format>dir</format>
    </formats>
    <id>distribution</id>
    <baseDirectory>egeria-omag-${open-metadata.version}</baseDirectory>

    <!-- Option Include any of our third party dependencies in lib -->
    <!-- In theory each moduleset below should be placing it's OWN dependencies into it's working location-->
    <!-- However this is currently not working. references to issues below -->
    <!-- so for now dependencies are added here -->
    <!--dependencySets>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <useTransitiveDependencies>true</useTransitiveDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <excludes>
            </excludes>
        </dependencySet
    </dependencySets-->

    <!-- IMPORTANT: Also add ANY modules used here to the dependency in the assembly pom -->
    <moduleSets>
        <moduleSet>
            <!-- We are in the assembly tree, but we need to access modules from anywhere in the build -->
            <useAllReactorProjects>true</useAllReactorProjects>
            <!-- We only pick from this module (submodules included by default) -->
            <includes>
                <include>io.github.tcnt:server-chassis-spring:*</include>
                <include>com.fasterxml.jackson.datatype:jackson-datatype-jsr310:*</include>
            </includes>
            <!-- Choose the binaries (ie jars) to includes - in this case keeping as a jar -->
            <binaries>
                <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
                <outputDirectory>./server</outputDirectory>
                <unpack>false</unpack>
                <!-- For most jars we'd include dependencies, but the chassis is already a large springboot application which includes all it needs -->
                <includeDependencies>false</includeDependencies>
            </binaries>
            <!-- Extra files from the source tree - relative to that project -->
        </moduleSet>
        <!-- Pull in all of our open connectors under server/lib. -->
        <moduleSet>
            <useAllReactorProjects>true</useAllReactorProjects>
            <!-- Get ALL our connectors. Hadoop skipped for now.  TODO: review list.  -->
            <!-- avoiding wildcards means build warnings if a pattern isn't used - helpful for identifying errors -->
            <includes>
                <include>io.github.tcnt:audit-log-console-connector:*</include>
                <include>io.github.tcnt:audit-log-event-topic-connector:*</include>
                <include>io.github.tcnt:audit-log-file-connector:*</include>
                <include>io.github.tcnt:audit-log-slf4j-connector:*</include>
                <include>io.github.tcnt:avro-file-connector:*</include>
                <include>io.github.tcnt:basic-file-connector:*</include>
                <include>io.github.tcnt:cohort-registry-file-store-connector:*</include>
                <include>io.github.tcnt:configuration-encrypted-file-store-connector:*</include>
                <include>io.github.tcnt:configuration-file-store-connector:*</include>
                <include>io.github.tcnt:csv-file-connector:*</include>
                <include>io.github.tcnt:data-folder-connector:*</include>
                <include>io.github.tcnt:discovery-service-connectors:*</include>
                <include>io.github.tcnt:governance-action-connectors:*</include>
                <include>io.github.tcnt:files-integration-connectors:*</include>
                <include>io.github.tcnt:kafka-integration-connector:*</include>
                <include>io.github.tcnt:openapi-integration-connector:*</include>
                <include>io.github.tcnt:openlineage-integration-connectors:*</include>
                <include>io.github.tcnt:inmemory-open-metadata-topic-connector:*</include>
                <include>io.github.tcnt:inmemory-repository-connector:*</include>
                <include>io.github.tcnt:kafka-open-metadata-topic-connector:*</include>
                <include>io.github.tcnt:omrs-rest-repository-connector:*</include>
                <include>io.github.tcnt:open-lineage-janus-connector:*</include>
                <include>io.github.tcnt:elasticsearch-integration-connector:*</include>
                <include>io.github.tcnt:open-metadata-archive-file-connector:*</include>
                <!-- included as we use for the tutorial environment for access control -->
                <include>io.github.tcnt:open-metadata-security-samples:*</include>
                <include>io.github.tcnt:spring-rest-client-connector:*</include>
                <!-- pluggable discovery service -->
                <include>io.github.tcnt:governance-services-sample:*</include>
            </includes>
            <binaries>
                <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
                <outputDirectory>./server/lib</outputDirectory>
                <unpack>false</unpack>
                <!-- Assemblies can pull in dependencies via a built in mechanism -we don't need all these uber jars -->
                <!-- #3540 - initial fix - the excess dependencies cause problems with server chassis -->
                <includeDependencies>false</includeDependencies>
                <excludes>
                    <!-- Not needed, as the build process for each connector does not put this into the main jar artifact -->
                    <!--exclude>*jar-with-dependencies.jar</exclude-->
                </excludes>
            </binaries>
        </moduleSet>
        <moduleSet>
            <useAllReactorProjects>true</useAllReactorProjects>
            <!-- Get graph-repository-connector jar-with-dependencies  -->
            <includes>
                <include>io.github.tcnt:graph-repository-connector:*</include>
            </includes>
            <binaries>
                <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
                <outputDirectory>./server/lib</outputDirectory>
                <unpack>false</unpack>
                <includeDependencies>false</includeDependencies>
                <attachmentClassifier>jar-with-dependencies</attachmentClassifier>
            </binaries>
        </moduleSet>
        <!-- Utilities -->
        <moduleSet>
            <useAllReactorProjects>true</useAllReactorProjects>
            <includes>
                <include>io.github.tcnt:cloud-information-model:*</include>
                <include>io.github.tcnt:glossary-canonical-model:*</include>
                <include>io.github.tcnt:open-metadata-types-utility:*</include>
            </includes>
            <binaries>
                <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
                <outputDirectory>./utilities</outputDirectory>
                <attachmentClassifier>jar-with-dependencies</attachmentClassifier>
                <unpack>false</unpack>
                <includeDependencies>false</includeDependencies>
            </binaries>
        </moduleSet>
        <!-- Samples -->
        <moduleSet>
            <useAllReactorProjects>true</useAllReactorProjects>
            <includes>
                <include>io.github.tcnt:admin-services-config-metadata-server-sample:*</include>
                <include>io.github.tcnt:asset-create-avro-sample:*</include>
                <include>io.github.tcnt:asset-create-csv-sample:*</include>
                <include>io.github.tcnt:asset-reader-avro-sample:*</include>
                <include>io.github.tcnt:asset-reader-csv-sample:*</include>
                <include>io.github.tcnt:governance-leadership-sample:*</include>
                <include>io.github.tcnt:governance-zone-create-sample:*</include>
                <include>io.github.tcnt:subject-area-definition-sample:*</include>
            </includes>
            <binaries>
                <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
                <attachmentClassifier>jar-with-dependencies</attachmentClassifier>
                <outputDirectory>./samples</outputDirectory>
                <unpack>false</unpack>
                <includeDependencies>false</includeDependencies>
            </binaries>
            <!-- TODO: Consider if samples should have sources - or be in another assembly -->
        </moduleSet>
        <!-- User Interface -->
        <moduleSet>
            <useAllReactorProjects>true</useAllReactorProjects>
            <includes>
                <include>io.github.tcnt:ui-chassis-spring:*</include>
            </includes>
            <!-- Choose the binaries (ie jars) to includes - in this case keeping as a jar -->
            <binaries>
                <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
                <outputDirectory>./user-interface</outputDirectory>
                <unpack>false</unpack>
                <!-- For most jars we'd include dependencies, but the chassis is already a large springboot application which includes all it needs -->
                <includeDependencies>false</includeDependencies>
            </binaries>
        </moduleSet>
        <!-- Conformance Suite -->
        <moduleSet>
            <useAllReactorProjects>true</useAllReactorProjects>
            <includes>
                <include>io.github.tcnt:open-metadata-conformance-suite-client:*</include>
            </includes>
            <binaries>
                <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
                <attachmentClassifier>jar-with-dependencies</attachmentClassifier>
                <outputDirectory>./conformance-suite</outputDirectory>
                <unpack>false</unpack>
                <includeDependencies>false</includeDependencies>
            </binaries>
        </moduleSet>
        <moduleSet>
            <!-- See https://issues.apache.org/jira/browse/MASSEMBLY-938 - causes a warning - appears to be bug, without - assembly fails-->
            <useAllReactorProjects>true</useAllReactorProjects>
            <includeSubModules>false</includeSubModules>
            <includes>
                <!-- Full qualification here is groupId:artifactId:packaging:classifier:version -->
                <!-- This retrieves our extra 'root' pom we use for carrying non-java extras needed -->
                <include>io.github.tcnt:egeria:*</include>
            </includes>
            <sources>
                <includeModuleDirectory>false</includeModuleDirectory>
                <fileSets>
                    <fileSet>
                        <outputDirectory>/</outputDirectory>
                        <includes>
                            <include>NOTICE</include>
                            <include>LICENSE</include>
                            <include>truststore.p12</include>
                        </includes>
                    </fileSet>
                    <fileSet>
                        <outputDirectory>/</outputDirectory>
                        <includes>
                            <include>content-packs/CloudInformationModel.json</include>
                            <include>content-packs/DataStoreConnectorTypes.json</include>
                            <include>content-packs/OpenMetadataTypes.json</include>
                            <include>content-packs/SimpleAPICatalog.json</include>
                            <include>content-packs/SimpleDataCatalog.json</include>
                            <include>content-packs/SimpleEventCatalog.json</include>
                            <include>content-packs/SimpleGovernanceCatalog.json</include>
                        </includes>
                    </fileSet>
                    <fileSet>
                        <outputDirectory>/</outputDirectory>
                        <includes>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week1.csv</include>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week2.csv</include>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week3.csv</include>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week4.csv</include>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week5.csv</include>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week6.csv</include>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week7.csv</include>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week8.csv</include>
                            <include>sample-data/oak-dene-drop-foot-weekly-measurements/week9.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week1.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week2.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week3.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week4.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week5.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week6.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week7.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week8.csv</include>
                            <include>sample-data/old-market-drop-foot-weekly-measurements/week9.csv</include>
                        </includes>
                    </fileSet>
                </fileSets>
            </sources>
        </moduleSet>
    </moduleSets>
</assembly>
